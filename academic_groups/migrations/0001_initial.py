# Generated by Django 2.2.4 on 2019-08-19 12:32

import academic_groups.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(max_length=200, verbose_name='Институт')),
                ('course', models.PositiveSmallIntegerField(default=1, verbose_name='Курс')),
                ('name', models.CharField(max_length=6, verbose_name='Название')),
                ('starosta_phone_number', models.CharField(max_length=12, validators=[academic_groups.models.validate_telephone_number], verbose_name='Номер старосты')),
                ('curator', models.CharField(max_length=50, verbose_name='Куратор')),
                ('starosta', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Староста')),
            ],
            options={
                'verbose_name': 'Академическая группа',
                'verbose_name_plural': 'Академические группы',
            },
        ),
        migrations.CreateModel(
            name='AcademicGroupExam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.AcademicGroup', verbose_name='Академическая группа')),
            ],
            options={
                'verbose_name': 'Экзамен академической группы',
                'verbose_name_plural': 'Экзамены академичских групп',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название мероприятия')),
                ('area', models.PositiveSmallIntegerField(choices=[(0, 'Научная'), (1, 'Культурная'), (2, 'Спортивная'), (4, 'Общественная')], verbose_name='Область мероприятия')),
                ('level', models.PositiveSmallIntegerField(choices=[(0, 'Международный'), (1, 'Всероссийский'), (2, 'Региональный'), (3, 'Городской'), (4, 'Университетский')], verbose_name='Уровень мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='ФИО')),
                ('educational_form', models.PositiveSmallIntegerField(choices=[(0, 'Бюджет'), (1, 'Контракт')], verbose_name='Форма обучения')),
                ('academic_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.AcademicGroup', verbose_name='Академическая группа')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(default=0, verbose_name='Баллы')),
                ('academic_group_exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.AcademicGroupExam', verbose_name='Экзамен академической группы')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.Student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Результат экзамена',
                'verbose_name_plural': 'Результаты экзаменов',
            },
        ),
        migrations.CreateModel(
            name='EventGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название')),
                ('prize_winning_place', models.PositiveSmallIntegerField(choices=[(1, '1 место'), (2, '2 место'), (3, '3 место'), (0, 'участие')], verbose_name='Призовое место')),
                ('academic_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.AcademicGroup', verbose_name='Академическая группа')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.Event', verbose_name='Мероприятие')),
                ('students', models.ManyToManyField(blank=True, to='academic_groups.Student', verbose_name='Студенты')),
            ],
            options={
                'verbose_name': 'Группа мероприятия',
                'verbose_name_plural': 'Группы мероприятий',
            },
        ),
        migrations.AddField(
            model_name='academicgroupexam',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_groups.Exam', verbose_name='Экзамен'),
        ),
        migrations.AlterUniqueTogether(
            name='academicgroupexam',
            unique_together={('academic_group', 'exam')},
        ),
    ]
